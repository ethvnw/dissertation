# Generated by Django 5.0.2 on 2024-03-07 19:56

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('department', models.CharField(choices=[('AERO', 'Aerospace Engineering'), ('BIO', 'Biomedical Engineering'), ('CPSY', 'Clinical and Applied Psychology Unit'), ('LIL', 'Department for Lifelong Learning'), ('ARC', 'Department of Archaeology'), ('ACSE', 'Department of Automatic Control and Systems Engineering'), ('CBE', 'Department of Chemical and Biological Engineering'), ('CHEM', 'Department of Chemistry'), ('CIV', 'Department of Civil and Structural Engineering'), ('COM', 'Department of Computer Science'), ('ECO', 'Department of Economics'), ('ELEC', 'Department of Electronic and Electrical Engineering'), ('GEO', 'Department of Geography'), ('LAND', 'Department of Landscape Architecture'), ('MATS', 'Department of Materials Science and Engineering'), ('MUS', 'Department of Music'), ('PHIL', 'Department of Philosophy'), ('PHYS', 'Department of Physics and Astronomy'), ('POL', 'Department of Politics and International Relations'), ('PSY', 'Department of Psychology'), ('SOC', 'Department of Sociological Studies'), ('USP', 'Department of Urban Studies and Planning'), ('GEN', 'General Engineering'), ('INF', 'Information School'), ('IWP', 'Institute of Work Psychology'), ('MNG', 'Management School'), ('MLTC', 'Modern Languages Teaching Centre'), ('AHP', 'School of Allied Health Professions'), ('ARCH', 'School of Architecture'), ('BIOS', 'School of Biosciences'), ('DEN', 'School of Clinical Dentistry'), ('EAS', 'School of East Asian Studies'), ('EDU', 'School of Education'), ('ENG', 'School of English'), ('JOU', 'School of Journalism'), ('LANG', 'School of Languages and Cultures'), ('LAW', 'School of Law'), ('MAT', 'School of Mathematics and Statistics'), ('MED', 'School of Medicine and Population Health'), ('SEFY', 'Science and Engineering Foundation Year'), ('SCIB', 'Sheffield Centre for Interdisciplinary Biblical Studies'), ('SMI', 'Sheffield Methods Institute')], max_length=5, verbose_name='department')),
                ('role', models.PositiveSmallIntegerField(choices=[(1, 'student'), (2, 'secretary'), (3, 'scrutiny')], default=1, verbose_name='role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_level', models.PositiveSmallIntegerField(choices=[(1, 'level 1'), (2, 'level 2'), (3, 'level 3'), (4, 'level 4'), (5, 'postgraduate')], verbose_name='study level')),
                ('course', models.CharField(max_length=250, verbose_name='course')),
                ('support_plan', models.FileField(blank=True, null=True, upload_to='support_plans/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
